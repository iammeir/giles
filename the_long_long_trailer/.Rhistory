images[[13]] %>%
image_resize(geometry_size_pixels(width = 480)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[34]] %>%
image_resize(geometry_size_pixels(width = 480)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[55]] %>%
image_resize(geometry_size_pixels(width = 480)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[56]] %>%
image_resize(geometry_size_pixels(width = 480)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[54]] %>%
image_resize(geometry_size_pixels(width = 480)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[16]] %>%
image_resize(geometry_size_pixels(width = 480)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[16]] %>%
image_resize(geometry_size_pixels(width = 480)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[16]] %>%
image_resize(geometry_size_pixels(width = 960)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[30]] %>%
image_resize(geometry_size_pixels(width = 960)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[31]] %>%
image_resize(geometry_size_pixels(width = 960)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[31]] %>%
image_resize(geometry_size_pixels(width = 800)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[31]] %>%
image_resize(geometry_size_pixels(width = 880)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[31]] %>%
image_resize(geometry_size_pixels(width = 640)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
images[[8]] %>%
image_resize(geometry_size_pixels(width = 640)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
new_images <- map(images,shrink_n_dither)
shrink_n_dither <- function(x){
image_resize(x,geometry_size_pixels(width = 640)) %>%
image_quantize(max = 12, colorspace = "YPbPr")
}
new_images <- map(images,shrink_n_dither)
new_images
map2(new_images,dir("imgs"),~image_write(.x,paste("img/",.y,sep="")))
map(emails,~string_extract_all(.x,"![.*](.*)"))
images <- map(emails,~str_extract_all(.x,"![.*](.*)"))
emails[[1]]
emails[[1]]$text
images <- map(emails,~str_extract_all(.x$text,"![.*](.*)"))
image_ref <- map(emails,~str_extract_all(.x$text,"![.*](.*)"))
image_ref <- map(emails,~str_extract_all(.x$text[1],"![.*](.*)"))
emails[[1]]$text[1]
emails[[1]]$text
emails[[1]]$text %>% str_extract_all("![.*](.*)")
emails[[1]]$text %>% str_extract_all("![.*]")
image_ref <- map(emails,~str_extract_all(.x$text[1],"![.*]"))
emails[[1]]$text %>% str_extract_all("![.*]")
emails[[1]]$text %>% str_extract_all("![.")
emails[[1]]$text %>% str_extract_all("!\\[.*\\]\\(.*\\)")
image_ref <- map(emails,~str_extract_all(.x$text[1],"!\\[.*\\]\\(.*\\)"))
inner_index <- function(title,index){
tibble(a = title) %>%
mutate(b = row_number(),
intind = paste(index,"_",b,sep="")) %>% pull(intind)
}
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index))
View(images_swapper)
inner_index <- function(title,index){
tibble(a = unlist(title)) %>%
mutate(b = row_number(),
intind = paste(index,"_",b,sep="")) %>% pull(intind)
}
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index))
replace_links <- function(old,new){
map2_chr(old,new,
~str_replace(.x,"(.*)",paste("img/",.y,".jpeg",sep="")))
}
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
new_title = map2(old_title,img_index,replace_links))
replace_links <- function(old,new){
map2(old,new,
~str_replace(.x,"(.*)",paste("img/",.y,".jpeg",sep="")))
}
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
new_title = map2(old_title,img_index,replace_links))
replace_links <- function(old,new){
map2(old,new,
~str_replace(.x,"\\(.*\\)",paste("img/",.y,".jpeg",sep="")))
}
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
new_title = map2(old_title,img_index,replace_links))
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
linker = map(old_title,str_extract("!\\[.*\\]")),
new_title = map2(old_title,img_index,replace_links))
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
linker = map(old_title,~str_extract(.x,"!\\[.*\\]")),
new_title = map2(old_title,img_index,replace_links))
warnings()
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
linker = map(old_title,~str_extract_all(.x,"!\\[.*\\]")),
new_title = map2(old_title,img_index,replace_links))
test <- repopulate_emails(emails[[1]],images_swapper[[1]])
repopulate_emails <- function(text,swap) {
newtext <- ""
for (x in swap) {
newtext <- text %>% str_replace(
paste("!\\",substr(x$linker,1,-1),"\\]","\\(.*\\)",sep=""),
x$new_title)
}
newtext
}
test <- repopulate_emails(emails[[1]],images_swapper[[1]])
repopulate_emails <- function(text,swap) {
newtext <- ""
print(str(x$new_title))
for (x in swap) {
newtext <- text %>% str_replace(
paste("!\\",substr(x$linker,1,-1),"\\]","\\(.*\\)",sep=""),
x$new_title)
}
newtext
}
test <- repopulate_emails(emails[[1]],images_swapper[[1]])
print(str(swap[[1]]$new_title))
repopulate_emails <- function(text,swap) {
newtext <- ""
print(str(swap[[1]]$new_title))
for (x in swap) {
newtext <- text %>% str_replace(
paste("!\\",substr(x$linker,1,-1),"\\]","\\(.*\\)",sep=""),
x$new_title)
}
newtext
}
test <- repopulate_emails(emails[[1]],images_swapper[[1]])
?str_replace
emails[[1]]$text
for (i in 1:17) {
text <- emails[[i]]$text
replacement_list <- images_swapper[[i]]
print(str(replacement_list))
}
for (i in 1:17) {
text <- emails[[i]]$text
replacement_list <- images_swapper[i,]
print(str(replacement_list))
}
for (i in 1:1) {
text <- emails[[i]]$text
replacement_list <- images_swapper[i,]
print(str(replacement_list))
}
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
old_url = map(old_title,~str_extract_all(.x,"(?<=\\().*(?=\\))")),
new_url = map(img_index,~paste("img/",img_index,".jpeg",sep=""))
)
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
old_url = map(old_title,~str_extract_all(.x,"(?<=\\().*(?=\\))")),
new_url = map(img_index,~paste("img/",.x,".jpeg",sep=""))
)
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
old_url = map(old_title,~str_extract_all(.x,"\\(.*\\)")),
new_url = map(img_index,~paste("(img/",.x,".jpeg)",sep=""))
)
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
old_url = map(old_title,~str_extract(.x,"\\(.*\\)")),
new_url = map(img_index,~paste("(img/",.x,".jpeg)",sep=""))
)
View(images_swapper[[4]][[1]])
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
old_url = map(unlist(old_title),~str_extract(.x,"\\(.*\\)")),
new_url = map(img_index,~paste("(img/",.x,".jpeg)",sep=""))
)
images_swapper <- tibble(old_title = image_ref) %>%
mutate(index = row_number(),
img_index = map2(old_title,index,inner_index),
old_url = map(old_title,~str_extract(unlist(.x),"\\(.*\\)")),
new_url = map(img_index,~paste("(img/",.x,".jpeg)",sep=""))
)
for (i in 1:1) {
text <- emails[[i]]$text
replacement_list <- images_swapper[i,]
if(length(replacement_list$old_url)>0){
for(x in 1:length(replacement_list$old_url)){
text <- str_replace(text,fixed(replacement_list$old_url[x]),replacement_list$new_url[x])
}
}
text
}
for (i in 1:1) {
text <- emails[[i]]$text
replacement_list <- images_swapper[i,]
if(length(replacement_list$old_url)>0){
for(x in 1:length(replacement_list$old_url)){
text <- str_replace(text,fixed(replacement_list$old_url[x]),replacement_list$new_url[x])
}
}
text
}
text
}
for (i in 1:1) {
globaltext <- emails[[i]]$text
replacement_list <- images_swapper[i,]
if(length(replacement_list$old_url)>0){
for(x in 1:length(replacement_list$old_url)){
text <- str_replace(text,fixed(replacement_list$old_url[x]),replacement_list$new_url[x])
print(text)
}
}
}
for (i in 6:6) {
globaltext <- emails[[i]]$text
replacement_list <- images_swapper[i,]
if(length(replacement_list$old_url)>0){
for(x in 1:length(replacement_list$old_url)){
text <- str_replace(text,fixed(replacement_list$old_url[x]),replacement_list$new_url[x])
print(text)
}
}
}
for (i in 6:6) {
text <- emails[[i]]$text
replacement_list <- images_swapper[i,]
if(length(replacement_list$old_url)>0){
for(x in 1:length(replacement_list$old_url)){
text <- str_replace(text,fixed(replacement_list$old_url[x]),replacement_list$new_url[x])
print(text)
}
}
}
emails[[2]]$text
emails[[2]]$text %>% str_replace(fixed(images_swapper[2,]$old_url[[1]),images_swapper[2,]$new_url[[1]])
emails[[2]]$text %>% str_replace(fixed(images_swapper[2,]$old_url[[1]]),images_swapper[2,]$new_url[[1]])
emails[[2]]$text %>% str_replace(
fixed(
unlist(images_swapper[2,]$old_url)[1]
),
unlist(images_swapper[2,]$new_url)[1]
)
new_emails <- emails
for(i in 1:length(images_swapper[2,]$old_url)){
new_emails[[2]]$text <- new_emails[[2]]$text %>%
str_replace(
fixed(
unlist(images_swapper[2,]$old_url)[i]
),
unlist(images_swapper[2,]$new_url)[i]
)
}
new_emails[[2]]
new_emails[[2]]$text
new_emails <- tibble(old_emails = emails) %>%
mutate(index = str_extract(emails$doc_id,"[0-9]{1,2}(?=_)"))
?map
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map_int(emails,~str_extract(.x$doc_id,"[0-9]{1,2}(?=_)")))
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map_int(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}(?=_)")))
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map_int(emails,~str_extract(.x$doc_id,"$[0123456789]{1,2}")))
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"$[0123456789]{1,2}")))
View(new_emails)
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")))
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map_int(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")))
View(new_emails[[1]][[3]])
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map_int(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as_numeric(index))
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as_numeric(index))
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index))
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index"))
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)))
View(new_emails[[7]][[3]])
feed <- function(text,pairs){
pairs$newtext[1] <- str_replace(text,fixed(pairs$pattern[1]),pairs$replace[1])
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(pairs$pattern[1]),pairs$replace[1])
}
}
feed <- function(text,pairs){
pairs$newtext[1] <- str_replace(text,fixed(pairs$pattern[1]),pairs$replace[1])
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(pairs$pattern[i]),pairs$replace[i])
}
}
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)),
outputemail = map2(old_emails,swap_pairs,~feed(.x$text,.y)))
feed <- function(text,pairs){
pairs <- pairs %>% mutate(newtext = "")
pairs$newtext[1] <- str_replace(text,fixed(pairs$pattern[1]),pairs$replace[1])
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(pairs$pattern[i]),pairs$replace[i])
}
}
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)),
outputemail = map2(old_emails,swap_pairs,~feed(.x$text,.y)))
feed <- function(text,pairs){
pairs <- pairs %>% mutate(newtext = "")
pairs$newtext[1] <- str_replace(text,fixed(pairs$pattern[1]),pairs$replace[1])
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(pairs$pattern[i]),pairs$replace[i])
}
}
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)),
outputemail = map2(old_emails,swap_pairs,~feed(.x$text,.y)))
feed <- function(text,pairs){
pairs <- pairs %>% mutate(newtext = "")
pairs$newtext[1] <- str_replace(text,fixed(pairs$pattern[1]),pairs$replace[1])
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(pairs$pattern[i]),pairs$replace[i])
}
pairs
}
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)),
outputemail = map2(old_emails,swap_pairs,~feed(.x$text,.y)))
feed <- function(text,pairs){
pairs <- pairs %>% mutate(newtext = "")
print(pairs)
pairs$newtext[1] <- str_replace(text,fixed(pairs$pattern[1]),pairs$replace[1])
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(pairs$pattern[i]),pairs$replace[i])
}
pairs
}
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)),
outputemail = map2(old_emails,swap_pairs,~feed(.x$text,.y)))
feed <- function(text,pairs){
if(nrow(pairs)>0){
pairs <- pairs %>% mutate(newtext = "")
print(pairs)
pairs$newtext[1] <- str_replace(text,fixed(pairs$pattern[1]),pairs$replace[1])
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(pairs$pattern[i]),pairs$replace[i])
}
pairs
}
else{
text
}
}
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)),
outputemail = map2(old_emails,swap_pairs,~feed(.x$text,.y)))
View(new_emails)
feed <- function(text,pairs){
if(nrow(pairs)>0){
pairs <- pairs %>% mutate(newtext = "")
print(pairs)
pairs$newtext[1] <- str_replace(text,fixed(pairs$pattern[1]),pairs$replace[1])
if(nrow(pairs)>1){
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(pairs$pattern[i]),pairs$replace[i])
}
}
pairs
}
else{
text
}
}
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)),
outputemail = map2(old_emails,swap_pairs,~feed(.x$text,.y)))
View(new_emails[[8]][[2]])
feed <- function(text,pairs){
if(nrow(pairs)>0){
pairs <- pairs %>% mutate(newtext = "")
print(pairs)
pairs$newtext[1] <- str_replace(text,fixed(pairs$pattern[1]),pairs$replace[1])
if(nrow(pairs)>1){
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(pairs$pattern[i]),pairs$replace[i])
}
}
pairs$newtext[nrow(pairs)]
}
else{
text
}
}
View(new_emails)
View(new_emails[[8]][[2]])
feed <- function(text,pairs){
if(nrow(pairs)>0){
pairs <- pairs %>% mutate(newtext = "")
print(pairs)
pairs$newtext[1] <- str_replace(text,fixed(pairs$pattern[1]),pairs$replace[1])
if(nrow(pairs)>1){
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(pairs$pattern[i]),pairs$replace[i])
}
}
pairs$newtext[nrow(pairs)]
}
else{
text
}
}
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)),
outputemail = map2_chr(old_emails,swap_pairs,~feed(.x$text,.y)))
View(new_emails[[8]][[5]])
new_emails[[8]][[5]]
feed <- function(text,pairs){
if(nrow(pairs)>0){
pairs <- pairs %>% mutate(newtext = "")
print(pairs)
pairs$newtext[1] <- str_replace(text,fixed(unlist(pairs$pattern)[1]),unlist(pairs$replace)[1])
if(nrow(pairs)>1){
for (i in 2:nrow(pairs)){
pairs$newtext[i] <- str_replace(pairs$newtext[i-1],fixed(unlist(pairs$pattern)[i]),unlist(pairs$replace)[i])
}
}
pairs$newtext[nrow(pairs)]
}
else{
text
}
}
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)),
outputemail = map2_chr(old_emails,swap_pairs,~feed(.x$text,.y)))
View(new_emails)
new_emails$outputemail[1]
new_emails <- tibble(old_emails = emails) %>%
mutate( index = map(emails,~str_extract(.x$doc_id,"[0123456789]{1,2}")),
index = as.numeric(index)) %>%
left_join(images_swapper,by=("index")) %>%
mutate(swap_pairs = map2(old_url,new_url,~tibble(pattern = .x,replace = .y)),
outputemail = map2_chr(old_emails,swap_pairs,~feed(.x$text,.y)),
output_name = map_chr(old_emails,~paste("web_",.x$doc_id,sep="")))
map2(new_emails$output_name,new_emails$outputemail,~write.file(.y,.x))
map2(new_emails$output_name,new_emails$outputemail,~write_file(.y,.x))
